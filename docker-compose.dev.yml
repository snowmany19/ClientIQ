version: '3.9'

services:
  db:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_DB: contractguard_db
      POSTGRES_USER: contractguard_user
      POSTGRES_PASSWORD: contractguard_pass
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - contractguardnet
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U contractguard_user -d contractguard_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
    restart: unless-stopped
    env_file:
      - ./backend/.env
    environment:
      DATABASE_URL: postgresql://contractguard_user:contractguard_pass@db:5432/contractguard_db
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - ./backend/static/reports:/app/static/reports
    networks:
      - contractguardnet
    ports:
      - "8000:8000"
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - contractguardnet
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

  frontend:
    build:
      context: ./frontend-nextjs
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    environment:
      # Set API URL to backend container
      NEXT_PUBLIC_API_URL: http://localhost:8000/api
    depends_on:
      - backend
    networks:
      - contractguardnet
    ports:
      - "3001:3000"
    volumes:
      - ./frontend-nextjs:/app
      - /app/node_modules
      - /app/.next

volumes:
  db_data:
  redis_data:

networks:
  contractguardnet:
    driver: bridge